name: TF Lint and Test

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - 'proxmox/**'

jobs:
  code-lint:
    runs-on: self-hosted
    container:
      image: ghcr.io/shakir85/tf-tools:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Run Git Setup
        uses: ./.github/actions/setup-git
        with:
          repo-path: /__w/proxmox-tf-modules/proxmox-tf-modules

      - name: Fetch latest changes
        run: |
          git fetch origin ${{ github.head_ref }}
          git pull origin ${{ github.head_ref }}

      - name: TF Formatting
        run: terraform fmt -recursive

      - name: Lint TF modules
        run: tflint --recursive

      - name: Commit changes
        run: |
          git add -A
          git commit -m "chore: auto-format Terraform files [skip ci]" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git ${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  smoke-test:
    runs-on: self-hosted
    needs: code-lint
    container:
      image: ghcr.io/shakir85/tf-tools:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Run Git Setup
        uses: ./.github/actions/setup-git
        with:
          repo-path: /__w/proxmox-tf-modules/proxmox-tf-modules

      - name: Fetch latest changes
        run: |
          git fetch origin ${{ github.head_ref }}
          git pull origin ${{ github.head_ref }}

      - run: echo "TF_VAR_api_token=${{ secrets.PROXMOX_API_TOKEN }}" >> $GITHUB_ENV

      - name: Generate dynamic smoke test Terraform file
        run: |
          cat <<EOF > ./proxmox/vm/test/smoke.auto.tf
          terraform {
            required_version = ">= 1.5.7, < 2.0.0"
            backend "local" {
              path = "./smoke.tfstate"
            }

            required_providers {
              proxmox = {
                source  = "bpg/proxmox"
                version = "0.70.0"
              }
              random = {
                source  = "hashicorp/random"
                version = "~> 3.0"
              }
              tls = {
                source  = "hashicorp/tls"
                version = "~> 4.0"
              }
              local = {
                source  = "hashicorp/local"
                version = "~> 2.0"
              }
            }
          }

          provider "proxmox" {
            endpoint  = "https://10.10.50.20:8006/"
            insecure  = true
            api_token = var.api_token
          }

          provider "random" {}

          variable "api_token" {}

          resource "random_pet" "name" {
            length    = 2
            separator = "-"
          }

          resource "tls_private_key" "this" {
            algorithm = "RSA"
            rsa_bits  = 2048
          }

          resource "local_file" "public_key" {
            content  = tls_private_key.this.public_key_openssh
            filename = "\${path.module}/id_rsa.pub"
          }

          module "smoke_test" {
            source              = "git::https://github.com/shakir85/terraform_modules.git//proxmox/vm?ref=${BRANCH_NAME}"
            enable_guest_agent  = true
            enable_cloud_init   = false
            template_id         = 8000
            proxmox_node_name   = "pve1"
            disk_name           = "sdc"
            directory           = "sdc"
            ssh_public_key_path = "\${path.module}/id_rsa.pub"
            username            = random_pet.name.id
            hostname            = "smoke-test-\${random_pet.name.id}"
            timezone            = "Etc/UTC"
            cloud_image_info    = ["sdc", "debian-12-generic-amd64.qcow2.img"]
            disk_size           = "20"
            memory              = 1028
            depends_on          = [local_file.public_key]
          }
          EOF
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./proxmox/vm/test

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./proxmox/vm/test

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./proxmox/vm/test

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./proxmox/vm/test
